<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="course.selection.dao.CourseMapper">
	
    <select id="findCourseInfo">
        SELECT
            a.course_index,
            a.course_dep,
            c.department_name,
            a.course_id,
            a.course_grade,
            a.course_name,
            a.course_required,
            CASE a.course_required
                WHEN '1' THEN '必修'
                WHEN '2' THEN '選修'
            END AS required,
            a.course_credit,
            a.teacher_id,
            b.user_name            
        FROM course_info a
        LEFT JOIN user_info b ON a.teacher_id = b.user_id
        LEFT JOIN department c ON a.course_dep = c.department_id
        <where>
            <if test="depId != null and depId != ''">
                AND a.course_dep = #{depId}
            </if>
        </where>
        ORDER BY a.course_id
    </select>

	<select id="findCourse">
        SELECT
            a.course_index,
            a.course_dep,
            e.department_name,
            a.course_id,
            a.course_name,
            a.course_required,
            CASE a.course_required
                WHEN '1' THEN '必修'
                WHEN '2' THEN '選修'
            END AS required,
            a.course_credit,
            b.course_content,
            a.teacher_id,
            b.course_capacity,
            c.user_name,
            b.course_year,
            b.course_semester,
            CASE b.course_semester
                WHEN '1' THEN '上'
                WHEN '2' THEN '下'
            END AS semester,
            b.course_of_week,
            CASE b.course_of_week
                WHEN 'Monday' THEN '星期一'
                WHEN 'Tuesday' THEN '星期二'
                WHEN 'Wednesday' THEN '星期三'
                WHEN 'Thursday' THEN '星期四'
                WHEN 'Friday' THEN '星期五'
            END AS weeks,
            b.course_start,
            b.course_end,
            b.course_locate,
            a.course_grade,
            d.class_id,
            d.class_name,
            CONCAT(a.course_grade, '年', d.class_name, '班') AS full_class_name
        FROM
            course_info a
        LEFT JOIN course_offerings b ON a.course_index = b.course_index
        LEFT JOIN user_info c ON a.teacher_id = c.user_id
        LEFT JOIN class_info d ON b.course_class_id = d.class_id
        LEFT JOIN department e ON a.course_dep = e.department_id
        <where>
            <if test="courseIndex != null">
                AND a.course_index = #{courseIndex}
            </if>
            <if test="teacherId != null">
                AND a.teacher_id = #{teacherId}
            </if>
            <if test="studentId != null">
                AND a.student_id = #{studentId}
            </if>
            <if test="courseYear != null">
                AND b.course_year = #{courseYear}
            </if>
            <if test="courseYear != null">
                AND b.course_semester = #{courseSemester}
            </if>
        </where>
    </select>
    
    <insert id="insertCourseInfo">
        INSERT INTO course_info(
            course_dep, course_id, course_grade, course_name, course_required, course_credit, teacher_id)
        VALUES(
            #{depId}, #{courseId}, #{courseGrade}, #{courseName}, #{courseRequired}, #{courseCredit}, #{teacherId})
    </insert>

    <select id="findDepartment">
        SELECT 
            department_id,
            department_name
        FROM department
        WHERE department_id != 'TE'
    </select>

    <select id="findTeacher" parameterType="java.lang.String">
        SELECT 
            user_id,
            user_password,
            permission_id,
            user_name,
            birth_date,
            sex,
            email,
            phone,
            department_id,
            class_id,
            admission_date,
            avatar
        FROM user_info
        WHERE department_id = #{depId} AND permission_id = 2
    </select>

    <delete id="deleteCourseInfo">
        DELETE FROM course_info
        WHERE 
        course_index = #{courseIndex}
    </delete>

    <update id="updateCourseInfo">
        UPDATE course_info
        <set>
            <if test="depId != null and depId != ''">
                course_dep = #{depId},
            </if>
            <if test="courseGrade != null and courseGrade != ''">
                course_grade = #{courseGrade},
            </if>
            <if test="courseId != null and courseId != ''">
                course_id = #{courseId},
            </if>
            <if test="courseName != null and courseName != ''">
                course_name = #{courseName},
            </if>
            <if test="courseRequired != null and courseRequired != ''">
                course_required = #{courseRequired},
            </if>
            <if test="courseCredit != null and courseCredit != ''">
                course_credit = #{courseCredit},
            </if>
            <if test="teacherId != null and teacherId != ''">
                teacher_id = #{teacherId},
            </if>            
        </set>
        WHERE course_index = #{courseIndex}
    </update>
    
    <update id="updateCourseOfferings">
        UPDATE course_offerings
        <set>
            <if test="courseStart != null and courseStart != ''">
                course_start = #{courseStart},
            </if>
            <if test="courseEnd != null and courseEnd != ''">
                course_end = #{courseEnd},
            </if>
            <if test="courseOfWeek != null and courseOfWeek != ''">
                course_of_week = #{courseOfWeek},
            </if>
            <if test="courseLocate != null and courseLocate != ''">
                course_locate = #{courseLocate},
            </if>
            <if test="courseContent != null and courseContent != ''">
                course_content = #{courseContent},
            </if>
        </set>
        WHERE course_index = #{courseIndex}
        AND course_year = #{courseYear}
        AND course_semester = #{courseSemester}
        AND course_class_id = #{classId}
        AND teacher_id = #{teacherId}
    </update>

    <select id="findScore">
        SELECT
            a.course_dep,
            a.course_id,
            a.course_year,
            a.course_semester,
            a.course_class_id,
            a.student_id,
            a.teacher_id,
            IFNULL(a.score, '0') as score,
            b.user_name,
            c.course_name 
        FROM
            course_score a
            LEFT JOIN user_info b ON a.student_id = b.user_id
            LEFT JOIN course_info c ON c.course_dep = a.course_dep
            AND c.course_id = a.course_id
        <where>
            <if test="depId != null and depId != ''">
                AND a.course_dep = #{depId}
            </if>
            <if test="teacherId != null and teacherId != ''">
                AND a.teacher_id = #{teacherId}
            </if>
            <if test="courseId != null and courseId != ''">
                AND a.course_id = #{courseId}
            </if>
            <if test="classId != null and classId != ''">
                AND a.course_class_id = #{classId}
            </if>
            <if test="courseYear != null and courseYear != ''">
                AND a.course_year = #{courseYear}
            </if>
            <if test="courseSemester != null and courseSemester != ''">
                AND a.course_semester = #{courseSemester}
            </if>
        </where>
        ORDER BY
            a.student_id
    </select>

    <select id="findTeacherCourseById">
        SELECT
            a.course_id,
            a.course_name 
        FROM
            course_info a 
        WHERE
            a.teacher_id = #{userId}
        GROUP BY
            course_id,
            course_name
    </select>

    <update id="updateScoreMap">
        UPDATE course_score
        SET score = #{score}
        WHERE
        course_dep = #{courseDep}
        AND course_id = #{courseId}
        AND course_year = #{courseYear}
        AND course_semester = #{courseSemester}
        AND course_class_id = #{courseClassId}
        AND student_id = #{studentId}
        AND teacher_id = #{teacherId}
    </update>

    <update id="updateScore" parameterType="java.util.List">
        <foreach collection="listMap" item="item" separator=";">
            UPDATE course_score
            SET score = #{item.score}
            WHERE
            course_dep = #{item.courseDep}
            AND course_id = #{item.courseId}
            AND course_year = #{item.courseYear}
            AND course_semester = #{item.courseSemester}
            AND course_class_id = #{item.courseClassId}
            AND student_id = #{item.studentId}
            AND teacher_id = #{item.teacherId}
        </foreach>
    </update>

    <select id="findStudentScore">
        SELECT
            a.course_dep,
            a.course_id,
            a.course_year,
            a.course_semester,
            a.course_class_id,
            a.student_id,
            a.teacher_id,
            IFNULL(a.score, '0') as score,
            b.course_name,
            c.department_name
        FROM
            course_score a
        LEFT JOIN course_info b ON a.course_dep = b.course_dep AND a.course_id = b.course_id
        LEFT JOIN department c ON a.course_dep = c.department_id
        WHERE
            a.student_id = #{userId}
            AND a.course_dep = #{depId}
            AND a.course_year = #{courseYear}
            AND a.course_semester = #{courseSemester}
    </select>

    <select id="findSchedule">
        SELECT
            b.course_index,
            b.course_dep,
            b.course_id,
            b.course_name,
            b.course_credit,
            a.course_year,
            a.course_semester,
            a.course_class_id,
            c.course_of_week,
            c.course_start,
            c.course_end,
            c.course_locate,
            CASE b.course_required
                WHEN '1' THEN '必修'
                WHEN '2' THEN '選修'
            END AS required
        FROM
            course_score a
            LEFT JOIN course_info b ON a.course_dep = b.course_dep 
            AND a.course_id = b.course_id
            LEFT JOIN course_offerings c ON b.course_index = c.course_index
            AND a.course_year = c.course_year 
            AND a.course_semester = c.course_semester
            AND a.course_class_id = c.course_class_id
        WHERE
            a.student_id = #{userId}
            AND a.course_year = #{courseYear}
            AND a.course_semester = #{courseSemester}
    </select>

    <select id="findCourseOfferingInfo">
        SELECT a.*, CONCAT(a.weeks,' 第', a.course_start, '-', a.course_end,'節') as course_time
        FROM (SELECT 
            a.course_index,
            b.course_dep,
            e.department_name,
            b.course_id,
            b.course_name,
            b.course_required,
            CASE b.course_required
                WHEN '1' THEN '必修'
                WHEN '2' THEN '選修'
            END AS required,
            b.course_credit,
            a.course_year,
            a.course_semester,
            c.class_id,
            c.grade,
            c.class_name,
            a.course_of_week,
            a.course_start,
            a.course_end,
            a.course_locate,
            a.course_content,
            a.teacher_id,
            a.course_capacity,
            d.user_name,
            CASE a.course_of_week
                WHEN 'Monday' THEN '星期ㄧ'
                WHEN 'Tuesday' THEN '星期二'
                WHEN 'Wednesday' THEN '星期三'
                WHEN 'Thursday' THEN '星期四'
                WHEN 'Friday' THEN '星期五'
            END AS weeks
        FROM
            course_offerings a
        LEFT JOIN course_info b ON a.course_index = b.course_index 
        LEFT JOIN class_info c ON a.course_class_id = c.class_id
        LEFT JOIN user_info d ON a.teacher_id = d.user_id
        LEFT JOIN department e ON b.course_dep = e.department_id
        <where>
            <if test="userId != null and userId != ''">
                AND a.teacher_id = #{userID}
            </if>
            <if test="depId != null and depId != ''">
                AND b.course_dep = #{depId}
            </if>
            <if test="courseYear != null and courseYear != ''">
                AND a.course_year = #{courseYear}
            </if>
            <if test="courseSemester != null and courseSemester != null">
                AND a.course_semester = #{courseSemester}
            </if>
            <if test="classId != null and classId != ''">
                AND c.class_id = #{classId}
            </if>
            <if test="courseRequired != null and courseRequired != ''">
                AND b.course_required = #{courseRequired}
            </if>
        </where>
        ) a
    </select>

    <select id="findCourseYear">
        SELECT
            course_year,
            course_semester 
        FROM
        <choose>
            <when test="userId.startsWith('TE')">
                course_offerings
            </when>
            <otherwise>
                course_score 
            </otherwise>
        </choose>
        <where>
            <choose>
                <when test="userId.startsWith('TE')">
                    teacher_id = #{userId}
                </when>
                <otherwise>
                    student_id = #{userId}
                </otherwise>
            </choose>
        </where>
        GROUP BY
            course_year,
            course_semester
        ORDER BY course_year, course_semester DESC
    </select>

    <select id="findAllCourseYear">
        SELECT
            course_year,
            course_semester 
        FROM course_offerings
        GROUP BY course_year, course_semester
    </select>
</mapper>